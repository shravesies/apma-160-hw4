function [S_inv_rt, x_hist] = fast_inv_sqrt(S, x0, num_iters)
% Inputs:
% > S is a positive number: we want to compute 1/sqrt(S)
% > x0 is the initial condition of the iteration
% > num_iters is the number of times the iterated map is applied

% > x_hist is a (1 x num_steps) row vector, i.e. 1 row and num_steps columns. 
x_hist = zeros(1, num_iters);

%   The first component of x_hist is the initial condition
x_hist(1) = x0;

S_inv_rt = 0; % the definition of these two variables needs to be changed, of course

% Outputs:
% > S_inv_rt is the computed approximation to 1/sqrt(S) after applying the
%   map a total of num_iters times.

%   the values of x^(k) generated by the iterated map in eq. (10) are the 
%   other components (in chronological order). 

for k = 1:num_iters-1
    x_hist(k+1) = (0.5*x_hist(k))*(3-(S*(x_hist(k))^2));
end

% The final value of x^(k) is EXCLUDED from x_hist - since it is already
%   returned as S_inv_rt

S_inv_rt = (0.5*x_hist(end))*(3-(S*(x_hist(end))^2));

end